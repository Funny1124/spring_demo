<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">
    <bean id="studentOne" class="com.cyan.spring.pojo.Student">
        <!--
        setter注入
        property：通过成员变量的set方法及进行赋值
        name；设置需要赋值的属性名
        value：设置为属性的值
        -->
        <property name="sid" value="1000"></property>
        <property name="sname" value="法外狂徒张三"></property>
        <property name="age" value="22"></property>
        <property name="gender" value="未知"></property>
    </bean>

    <bean id="studentTwo" class="com.cyan.spring.pojo.Student">
        <!--
        setter注入
        property：通过成员变量的set方法及进行赋值
        name；设置需要赋值的属性名
        value：设置为属性的值
        -->
        <property name="sid" value="1001"></property>
        <property name="sname" value="张三"></property>
        <property name="age" value="22"></property>
        <property name="gender" value="男"></property>
    </bean>

    <bean id="studentThree" class="com.cyan.spring.pojo.Student">
        <constructor-arg value="1002"></constructor-arg>
        <constructor-arg value="李四"></constructor-arg>
        <constructor-arg value="23"></constructor-arg>
        <constructor-arg value="女"></constructor-arg>
    </bean>

    <!--
    特殊值
    赋值为 null ，应插入<null></null>
    赋值为 < 应插入&lt; > 则为 &gt; 及对应特殊字符的 xml实体
    还可以使用CDATA区，CDATA区内容会原样解析
    -->
    <bean id="studentFour" class="com.cyan.spring.pojo.Student">
        <property name="sid" value="1001"></property>
        <!--        <property name="sname" value="&lt;王五&gt;"></property>-->
        <property name="sname">
            <value><![CDATA[<王五>]]></value>
        </property>
        <property name="age" value="22"></property>
        <property name="gender">
            <null></null>
        </property>
    </bean>

    <bean id="studentFive" class="com.cyan.spring.pojo.Student">
        <property name="sid" value="1006"></property>
        <property name="sname" value="赵六"></property>
        <property name="age" value="24"></property>
        <property name="gender" value="男"></property>
        <!-- ref 引用ioc 容器中另一个bean 的id-->
        <!--        <property name="clazz" ref="clazz"></property>-->
        <!--        级联 需提前赋值-->
        <!--        <property name="clazz.cid" value="002"></property>-->
        <!--        <property name="clazz.cName" value="苍英1717"></property>-->
        <property name="clazz">
            <!--            内部bean-->
            <bean id="clazzInner" class="com.cyan.spring.pojo.Clazz">
                <property name="cid" value="001"></property>
                <property name="cName" value="苍英1717"></property>
            </bean>
        </property>

        <property name="bobby">
            <array>
                <!--                若为类，则<ref bean="xxx"></ref>-->
                <value>吃饭</value>
                <value>睡觉</value>
                <value>打游戏</value>
            </array>
        </property>
        <property name="teacherMap" ref="teacherMap">
            <!--            <map>-->
            <!--                <entry key="001" value-ref="teacherOne"></entry>-->
            <!--                <entry key="002" value-ref="teacherTwo"></entry>-->
            <!--            </map>-->
        </property>
    </bean>

    <bean id="clazz" class="com.cyan.spring.pojo.Clazz">
        <property name="cid" value="001"></property>
        <property name="cName" value="最强班"></property>
        <!--        <property name="students">-->
        <!--            <list>-->
        <!--                <ref bean="studentOne"></ref>-->
        <!--                <ref bean="studentTwo"></ref>-->
        <!--                <ref bean="studentFive"></ref>-->
        <!--            </list>-->
        <!--        </property>-->
        <property name="students" ref="studentList"></property>
    </bean>
    <!--    设置一个集合类型的bean，需要只用 util 的约束-->
    <util:list id="studentList">
        <ref bean="studentOne"></ref>
        <ref bean="studentTwo"></ref>
        <ref bean="studentFive"></ref>
    </util:list>
    <bean id="teacherOne" class="com.cyan.spring.pojo.Teacher">
        <property name="tId" value="001"></property>
        <property name="tName" value="李白"></property>
    </bean>
    <bean id="teacherTwo" class="com.cyan.spring.pojo.Teacher">
        <property name="tId" value="002"></property>
        <property name="tName" value="杜甫"></property>
    </bean>
    <util:map id="teacherMap">
        <entry key="001" value-ref="teacherOne"></entry>
        <entry key="002" value-ref="teacherTwo"></entry>
    </util:map>

    <bean id="studentSix" class="com.cyan.spring.pojo.Student"
          p:sid="1006" p:sname="李华" p:teacherMap-ref="teacherMap">
    </bean>
</beans>